## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

---
openapi: 3.0.1
info:
  title: swagger definition for org.apache.servicecomb.swagger.generator.jaxrs.Echo
  version: 1.0.0
servers:
- url: Echo
paths:
  /aggregatedParam:
    post:
      operationId: aggregatedParam
      parameters:
      - name: path0
        in: path
        required: true
        schema:
          type: string
          default: pa
      - name: query1
        in: query
        schema:
          type: integer
          format: int32
      - name: cookie4
        in: cookie
        schema:
          type: integer
          format: int64
      - name: header2
        in: header
        schema:
          type: string
      - name: query-array
        in: query
        schema:
          type: array
          items:
            type: string
      - name: query-list
        in: query
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                form3:
                  type: integer
                  format: int64
      responses:
        "200":
          description: response of 200
  /beanParamComplexField:
    post:
      operationId: beanParamComplexField
      parameters:
      - name: q
        in: query
        schema:
          $ref: '#/components/schemas/AggregatedParam'
      responses:
        "200":
          description: response of 200
  /beanParamComplexSetter:
    post:
      operationId: beanParamComplexSetter
      parameters:
      - name: h
        in: header
        schema:
          $ref: '#/components/schemas/AggregatedParam'
      responses:
        "200":
          description: response of 200
  /beanParamDefaultBody:
    post:
      operationId: beanParamDefaultBody
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/protobuf:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        x-name: name
      responses:
        "200":
          description: response of 200
  /beanParamWithJsonIgnoredTaggedBody:
    post:
      operationId: beanParamWithJsonIgnoredTagged
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: response of 200
  /beanParamWithPart:
    post:
      operationId: beanParamWithPart
      parameters:
      - name: queryStr
        in: query
        schema:
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                up0:
                  type: string
                  format: binary
                up1:
                  type: string
                  format: binary
      responses:
        "200":
          description: response of 200
  /cookie:
    post:
      operationId: cookie
      parameters:
      - name: cookie
        in: cookie
        schema:
          type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            application/protobuf:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /dynamicStatusEnum:
    post:
      operationId: dynamicStatusEnum
      parameters:
      - name: status-aggr
        in: query
        description: dynamic desc aggr
        required: false
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        description: dynamic desc direct
        required: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicStatusModel'
          application/protobuf:
            schema:
              $ref: '#/components/schemas/DynamicStatusModel'
          text/plain:
            schema:
              $ref: '#/components/schemas/DynamicStatusModel'
        x-name: model
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/protobuf:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
  /echo/{targetName}:
    post:
      operationId: echo
      parameters:
      - name: header
        in: header
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/protobuf:
            schema:
              $ref: '#/components/schemas/User'
          text/plain:
            schema:
              $ref: '#/components/schemas/User'
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            application/protobuf:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /emptyPath:
    post:
      operationId: emptyPath
      responses:
        "200":
          description: response of 200
  /enumBody:
    post:
      operationId: enumBody
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
              - RED
              - YELLOW
              - BLUE
          application/protobuf:
            schema:
              type: string
              enum:
              - RED
              - YELLOW
              - BLUE
          text/plain:
            schema:
              type: string
              enum:
              - RED
              - YELLOW
              - BLUE
        x-name: color
      responses:
        "200":
          description: response of 200
  /form:
    post:
      operationId: form
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                form:
                  type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            application/protobuf:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /jdkStatusEnum:
    post:
      operationId: jdkStatusEnum
      parameters:
      - name: status-aggr
        in: query
        description: jdk desc aggr
        required: false
        schema:
          type: string
          enum:
          - BAD_REQUEST
          - NOT_FOUND
      - name: status
        in: query
        description: jdk desc direct
        required: false
        schema:
          type: string
          enum:
          - BAD_REQUEST
          - NOT_FOUND
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JdkStatusModel'
          application/protobuf:
            schema:
              $ref: '#/components/schemas/JdkStatusModel'
          text/plain:
            schema:
              $ref: '#/components/schemas/JdkStatusModel'
        x-name: model
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
                enum:
                - BAD_REQUEST
                - NOT_FOUND
            application/protobuf:
              schema:
                type: string
                enum:
                - BAD_REQUEST
                - NOT_FOUND
            text/plain:
              schema:
                type: string
                enum:
                - BAD_REQUEST
                - NOT_FOUND
  /nestedListString:
    post:
      operationId: nestedListString
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: array
                items:
                  type: string
          application/protobuf:
            schema:
              type: array
              items:
                type: array
                items:
                  type: string
          text/plain:
            schema:
              type: array
              items:
                type: array
                items:
                  type: string
        x-name: param
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
            application/protobuf:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
            text/plain:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
  /:
    patch:
      operationId: patch
      responses:
        "200":
          description: response of 200
  /query:
    get:
      operationId: query
      parameters:
      - name: query
        in: query
        schema:
          type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            application/protobuf:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /queryComplex:
    get:
      operationId: queryComplex
      parameters:
      - name: querys
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/User'
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            application/protobuf:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /testRawJson:
    post:
      operationId: rawJsonStringMethod
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        required: true
        x-raw-json: true
        x-name: jsonInput
      responses:
        "200":
          description: response of 200
  /response:
    post:
      operationId: response
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/protobuf:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
components:
  schemas:
    AggregatedParam:
      type: object
      properties:
        strVal:
          type: string
        intVal:
          type: integer
          format: int32
        longVal:
          type: integer
          format: int64
        cookieVal:
          type: integer
          format: int64
        headerVal:
          type: string
        queryArray:
          type: array
          items:
            type: string
        queryList:
          type: array
          items:
            type: string
      x-java-class: org.apache.servicecomb.swagger.generator.jaxrs.model.AggregatedParam
    DynamicStatusModel:
      type: object
      properties:
        status:
          type: integer
          format: int32
      x-java-class: org.apache.servicecomb.swagger.generator.jaxrs.model.enums.DynamicStatusModel
    User:
      type: object
      properties:
        name:
          type: string
        friends:
          type: array
          items:
            $ref: '#/components/schemas/User'
      x-java-class: org.apache.servicecomb.foundation.test.scaffolding.model.User
    JdkStatusModel:
      type: object
      properties:
        status:
          type: string
          enum:
          - BAD_REQUEST
          - NOT_FOUND
      x-java-class: org.apache.servicecomb.swagger.generator.jaxrs.model.enums.JdkStatusModel