## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

---
openapi: 3.0.1
info:
  title: swagger definition for org.apache.servicecomb.swagger.generator.springmvc.Echo
  version: 1.0.0
servers:
- url: Echo
paths:
  /asyncResponseEntity:
    put:
      operationId: asyncResponseEntity
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
  /cookie:
    put:
      operationId: cookie
      parameters:
      - name: cookie
        in: cookie
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: response of 200
  /emptyPath:
    put:
      operationId: emptyPath
      responses:
        "200":
          description: response of 200
  /enumBody:
    put:
      operationId: enumBody
      requestBody:
        content:
          application/json:
            schema:
              type: string
              enum:
              - RED
              - YELLOW
              - BLUE
          text/plain:
            schema:
              type: string
              enum:
              - RED
              - YELLOW
              - BLUE
        required: true
        x-name: color
      responses:
        "200":
          description: response of 200
  /inheritHttpMethod:
    put:
      operationId: inheritHttpMethod
      parameters:
      - name: query
        in: query
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: response of 200
  /nestedListString:
    put:
      operationId: nestedListString
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: array
                items:
                  type: string
          text/plain:
            schema:
              type: array
              items:
                type: array
                items:
                  type: string
        required: true
        x-name: param
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
            text/plain:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
  /part:
    put:
      operationId: part
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                part:
                  type: string
                  format: binary
      responses:
        "200":
          description: response of 200
  /partAnnotation:
    put:
      operationId: partAnnotation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                part:
                  type: string
                  format: binary
      responses:
        "200":
          description: response of 200
  /partArray:
    put:
      operationId: partArray
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                part:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: response of 200
  /partArrayAnnotation:
    put:
      operationId: partArrayAnnotation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                part:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: response of 200
  /partList:
    put:
      operationId: partList
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                part:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: response of 200
  /partListAnnotation:
    put:
      operationId: partListAnnotation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                part:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: response of 200
  /rawJsonStringMethod:
    put:
      operationId: rawJsonStringMethod
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        required: true
        x-raw-json: true
        x-name: jsonInput
      responses:
        "200":
          description: response of 200
  /testCompletableFutureResponseEntityOptional:
    put:
      operationId: testCompletableFutureResponseEntityOptional
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /testResponseEntityOptional:
    put:
      operationId: testResponseEntityOptional
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
            text/plain:
              schema:
                type: string
components: {}