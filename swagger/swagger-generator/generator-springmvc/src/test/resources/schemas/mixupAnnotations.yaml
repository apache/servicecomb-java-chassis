## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

---
openapi: 3.0.1
info:
  title: swagger definition for org.apache.servicecomb.swagger.generator.springmvc.MethodMixupAnnotations
  version: 1.0.0
servers:
- url: MethodMixupAnnotations
paths:
  /defaultQueryParam:
    post:
      operationId: defaultQueryParam
      parameters:
      - name: prefix
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: user
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
  /reduce:
    get:
      operationId: reduce
      parameters:
      - name: b
        in: cookie
        required: true
        schema:
          type: integer
          format: int32
      - name: a
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /uploadFileAndAttribute:
    post:
      operationId: uploadFileAndAttribute
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                attribute:
                  type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
  /uploadFilesAndAttribute:
    post:
      operationId: uploadFilesAndAttribute
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                attribute:
                  type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
  /usingDeleteMapping/{targetName}:
    delete:
      operationId: usingDeleteMapping
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            text/plain:
              schema:
                type: string
            application/*:
              schema:
                type: string
  /usingGetMapping/{targetName}:
    get:
      operationId: usingGetMapping
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            text/plain:
              schema:
                type: string
            application/*:
              schema:
                type: string
  /usingPatchMapping/{targetName}:
    patch:
      operationId: usingPatchMapping
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            text/plain:
              schema:
                type: string
            application/*:
              schema:
                type: string
  /usingPostMapping/{targetName}:
    post:
      operationId: usingPostMapping
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            text/plain:
              schema:
                type: string
            application/*:
              schema:
                type: string
  /usingPutMapping/{targetName}:
    put:
      operationId: usingPutMapping
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            text/plain:
              schema:
                type: string
            application/*:
              schema:
                type: string
  /usingRequestMapping/{targetName}:
    post:
      operationId: usingRequestMapping
      parameters:
      - name: header
        in: header
        required: true
        schema:
          type: string
      - name: targetName
        in: path
        required: true
        schema:
          type: string
      - name: word
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
        x-name: srcUser
      responses:
        "200":
          description: response of 200
          content:
            text/plain:
              schema:
                type: string
            application/*:
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        friends:
          type: array
          items:
            $ref: '#/components/schemas/User'