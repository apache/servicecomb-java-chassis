## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

openapi: 3.0.1
info:
  title: swagger definition for org.apache.servicecomb.demo.jaxrs.server.ComputeImpl
  version: 1.0.0
servers:
- url: /compute
paths:
  /add:
    post:
      operationId: add
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                a:
                  type: integer
                  format: int32
                b:
                  type: integer
                  format: int32
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /addstring:
    delete:
      operationId: addString
      parameters:
      - name: s
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
  /istrue:
    get:
      operationId: isTrue
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: boolean
  /reduce:
    get:
      operationId: reduce
      parameters:
      - name: a
        in: query
        required: false
        explode: false
        schema:
          type: integer
          format: int32
      - name: b
        in: query
        required: false
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /sayhei:
    delete:
      operationId: sayHei
      parameters:
      - name: name
        in: query
        schema:
          type: string
      responses:
        "200":
          description: response of 200
  /sayhello:
    post:
      operationId: sayHello
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        x-name: user
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /sayhi/{name}:
    put:
      operationId: sayHi
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: response of 200
  /sayhi/{name}/v2:
    put:
      operationId: sayHi2
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: response of 200
  /saysomething:
    post:
      operationId: saySomething
      parameters:
      - name: prefix
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        x-name: user
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
  /testrawjson:
    post:
      operationId: testRawJsonString
      requestBody:
        content:
          application/json:
            schema:
              type: string
        x-name: jsonInput
      responses:
        "200":
          description: response of 200
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    Person:
      type: object
      properties:
        name:
          type: string
      x-java-class: org.apache.servicecomb.demo.compute.Person
