## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: cse test
  version: 1.0.0
  x-java-interface: org.apache.servicecomb.demo.server.Test

# the domain of the service
#host: api.uber.com

# array of all schemes that your API supports
#schemes:
#  - https

# will be prefixed to all paths
basePath: /pojo/rest
produces:
  - application/json

paths:
  /testStringArray:
    get:
      operationId: testStringArray
      parameters:
        - name: arr
          in: query
          required: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: asdf
          schema:
            type: string
  /testStatic:
    get:
      operationId: getTestString
      parameters:
        - name: code
          in: query
          required: false
          type: string
      responses:
        "200":
          description: asdf
          schema:
            type: string
    post:
      operationId: postTestStatic
      parameters:
        - name: code
          in: query
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: asdf
          schema:
            type: string
    patch:
      operationId: patchTestStatic
      parameters:
        - name: code
          in: query
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: asdf
          schema:
            type: string
  /testException/{code}:
    get:
      operationId: testException
      parameters:
        - name: code
          in: path
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: asdf
          schema:
            type: string
        456:
          description: asdf
          schema:
            type: string
        556:
          description: asdf
          schema:
            type: array
            items:
              type: string
        557:
          description: asdf
          schema:
            type: array
            items:
              type: array
              items:
                type: string
  /splitParam:
    post:
      operationId: splitParam
      parameters:
        - name: index
          in: query
          required: true
          type: integer
          format: int32
        - name: user
          in: body
          schema:
            $ref: '#/definitions/User'
      responses:
        "200":
          description: asdf
          schema:
            $ref: '#/definitions/User'
        default:
          description: asf
          schema:
            $ref: '#/definitions/Error'
  /wrapParam:
    post:
      operationId: wrapParam
      parameters:
        - name: request
          in: body
          required: false
          schema:
            $ref: '#/definitions/TestRequest'
      responses:
        "200":
          description: asdf
          schema:
            $ref: '#/definitions/User'
        default:
          description: asf
          schema:
            $ref: '#/definitions/Error'
  /addstring:
    delete:
      operationId: addString
      parameters:
        - name: strArr
          in: query
          required: true
          type: array
          items:
            type: string
      responses:
        "200":
          description: add string
          schema:
            type: string
  /testTraceId:
    get:
      operationId: testTraceId
      responses:
        "200":
          description: get trace id
          schema:
            type: string
definitions:
  Error:
    type: object
    x-java-class: org.apache.servicecomb.swagger.invocation.exception.CommonExceptionData
    properties:
      message:
        type: string
  TestRequest:
    type: object
    properties:
      index:
        type: integer
        format: int32
      user:
        $ref: '#/definitions/User'
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      data:
        type: string
        format: byte
  User:
    type: object
    properties:
      name:
        type: string
      age:
        type: integer
        format: int32
      index:
        type: integer
        format: int32
    x-java-class: "org.apache.servicecomb.demo.server.User"
