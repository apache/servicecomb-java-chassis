## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

servicecomb:
  service:
    application: springmvctest
    name: springmvcClient
    version: 0.0.1
  registry:
    sc:
      address: http://127.0.0.1:30100
      autodiscovery: true
      healthCheckIntervalInSeconds: 3
      pollIntervalInMillis: 90000
      watch: true

  rest:
    client:
      connection:
        compression: true
  references:
    version-rule: 0+
  request:
    clientRequestHeaderFilterEnabled:
      # Do not copy cse-context to target for microservice(testServiceName)
      testServiceName: true
  invocation:
    timeout:
      check:
        enabled: true
        strategy: processing-time
    springmvc:
      SpringMVCCommonSchemaInterface:
        testInvocationTimeoutInClientWait:
          timeout: 300
  tracing:
    enabled: true
    samplingRate: 0.5
  loadbalance:
    userDefinedEndpoint.enabled: true
    strategy:
      name: WeightedResponse
    retryEnabled: true
    retryOnSame: 1
    retryOnNext: 1
    filter.status.enabled: false
  fallbackpolicy:
    Consumer:
      springmvc:
        codeFirst:
          fallbackFromCache:
            policy: fromCache
          fallbackReturnNull:
            policy: returnNull
          fallbackThrowException:
            policy: throwException
          fallbackForce:
            policy: mycustom
  fallback:
    Consumer:
      springmvc:
        codeFirst:
          fallbackForce:
            force: true
  datacenter:
    name: myDC
    region: my-Region
    availableZone: my-Zone

  faultInjection:
    enabled: true

  governance:
    Consumer:
      springmvc:
        schemas:
          codeFirst:
            operations:
              testDelay:
                policy:
                  fault:
                    protocols:
                      rest:
                        delay:
                          fixedDelay: 10
                          percent: 50
              testAbort:
                policy:
                  fault:
                    protocols:
                      rest:
                        abort:
                          httpStatus: 421
                          percent: 50

  # test governance retry
  matchGroup:
    retry-governance: |
      matches:
        - apiPath:
            prefix: "/retry/governance/"
  retry:
    retry-governance: |
      maxAttempts: 2
      retryOnResponseStatus: [500]

#########SSL options
# open jdk 8 now TLSv1.3 not available
# ssl.protocols: TLSv1.3
# ssl.ciphers: TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384
ssl.protocols: TLSv1.2
ssl.authPeer: true
ssl.checkCN.host: false

#########certificates config
ssl.trustStore: trust.jks
ssl.trustStoreType: JKS
ssl.trustStoreValue: Changeme_123
ssl.keyStore: server.p12
ssl.keyStoreType: PKCS12
ssl.keyStoreValue: Changeme_123
ssl.crl: revoke.crl
ssl.sslCustomClass: org.apache.servicecomb.demo.DemoSSLCustom
